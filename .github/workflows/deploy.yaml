name: Deploy Custom Video SDK to VPS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to Production Server
    runs-on: ubuntu-latest
    
    steps:
    - name: 🚀 Deploy to Server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          set -e
          
          # Colors for output
          RED='\033[0;31m'
          GREEN='\033[0;32m'
          YELLOW='\033[1;33m'
          BLUE='\033[0;34m'
          NC='\033[0m'
          
          echo -e "${BLUE}🚀 Starting Custom Video SDK Deployment${NC}"
          echo -e "${YELLOW}📅 Deployment Time: $(date)${NC}"
          echo -e "${YELLOW}🌐 Server: ${{ secrets.SERVER_HOST }}${NC}"
          
          # Configuration
          APP_NAME="custom-video-sdk"
          APP_DIR="/var/www/video-sdk"
          DOMAIN="videosdk.genisisserver.space"
          EMAIL="support@genisisserver.space"
          
          # Create app directory if it doesn't exist
          mkdir -p $APP_DIR
          cd $APP_DIR
          
          # Clone or update repository
          if [ ! -d ".git" ]; then
            echo -e "${YELLOW}📥 Cloning repository for first time...${NC}"
            git clone https://github.com/StrixSid07/CustomVideoSDK.git .
          else
            echo -e "${YELLOW}🔄 Updating existing repository...${NC}"
            git fetch --all
            git reset --hard origin/main
            git clean -fd
            git pull origin main
          fi
          
          echo -e "${GREEN}✅ Repository updated successfully${NC}"
          
          # Install/Update dependencies
          echo -e "${YELLOW}📦 Installing dependencies...${NC}"
          npm install --production
          
          # Create necessary directories
          mkdir -p recordings logs
          
          # Update PM2 ecosystem configuration
          echo -e "${YELLOW}⚙️ Updating PM2 configuration...${NC}"
          cat > ecosystem.config.js << 'EOF'
          module.exports = {
            apps: [{
              name: 'custom-video-sdk',
              script: 'server/index.js',
              instances: 'max',
              exec_mode: 'cluster',
              env: {
                NODE_ENV: 'production',
                PORT: 5005,
                MAX_PARTICIPANTS: 50,
                RECORDING_ENABLED: true,
                CORS_ORIGIN: 'https://videosdk.genisisserver.space',
                DOMAIN: 'videosdk.genisisserver.space'
              },
              error_file: './logs/err.log',
              out_file: './logs/out.log',
              log_file: './logs/combined.log',
              time: true,
              max_memory_restart: '500M',
              node_args: '--max-old-space-size=1024'
            }]
          };
          EOF
          
          # Install PM2 if not installed
          if ! command -v pm2 &> /dev/null; then
            echo -e "${YELLOW}📦 Installing PM2...${NC}"
            npm install -g pm2
          fi
          
          # Configure Nginx if not configured
          if [ ! -f "/etc/nginx/sites-available/videosdk" ]; then
            echo -e "${YELLOW}🌐 Configuring Nginx...${NC}"
            
            # Install Nginx if not installed
            if ! command -v nginx &> /dev/null; then
              apt update
              apt install nginx -y
            fi
            
            # Create Nginx configuration
            cat > /etc/nginx/sites-available/videosdk << 'NGINXEOF'
          server {
              listen 80;
              server_name videosdk.genisisserver.space www.videosdk.genisisserver.space;
              
              location / {
                  proxy_pass http://localhost:5005;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection 'upgrade';
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
                  proxy_cache_bypass $http_upgrade;
                  proxy_read_timeout 86400;
              }
              
              location /socket.io/ {
                  proxy_pass http://localhost:5005;
                  proxy_http_version 1.1;
                  proxy_set_header Upgrade $http_upgrade;
                  proxy_set_header Connection "upgrade";
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
              
              location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
                  expires 1y;
                  add_header Cache-Control "public, immutable";
              }
          }
          NGINXEOF
            
            # Enable site
            ln -sf /etc/nginx/sites-available/videosdk /etc/nginx/sites-enabled/
            rm -f /etc/nginx/sites-enabled/default
            
            # Test and reload Nginx
            nginx -t && systemctl reload nginx || echo "Nginx configuration error"
            systemctl enable nginx
          fi
          
          # Restart/Start application with PM2
          echo -e "${YELLOW}🔄 Restarting application...${NC}"
          
          # Check if app is already running
          if pm2 list | grep -q "custom-video-sdk"; then
            echo -e "${YELLOW}🔄 Reloading existing application...${NC}"
            pm2 reload custom-video-sdk
          else
            echo -e "${YELLOW}🚀 Starting new application...${NC}"
            pm2 start ecosystem.config.js
            pm2 startup
            pm2 save
          fi
          
          # Health check
          echo -e "${YELLOW}🏥 Performing health check...${NC}"
          sleep 5
          
          if curl -f http://localhost:5005/health > /dev/null 2>&1; then
            echo -e "${GREEN}✅ Application is healthy${NC}"
          else
            echo -e "${RED}❌ Application health check failed${NC}"
            echo -e "${YELLOW}📜 Recent logs:${NC}"
            pm2 logs custom-video-sdk --lines 10 --nostream
          fi
          
          # Setup SSL if not already configured
          if [ ! -f "/etc/letsencrypt/live/$DOMAIN/fullchain.pem" ]; then
            echo -e "${YELLOW}🔒 Setting up SSL certificate...${NC}"
            
            # Install Certbot if not installed
            if ! command -v certbot &> /dev/null; then
              apt install snapd -y
              snap install core; snap refresh core
              snap install --classic certbot
              ln -s /snap/bin/certbot /usr/bin/certbot
            fi
            
            # Get SSL certificate
            certbot --nginx -d $DOMAIN -d www.$DOMAIN --non-interactive --agree-tos --email $EMAIL || echo "SSL setup failed, will retry later"
          fi
          
          # Final status
          echo -e "${GREEN}✅ Deployment completed successfully!${NC}"
          echo ""
          echo -e "${BLUE}📊 Service Status:${NC}"
          pm2 status
          echo ""
          echo -e "${BLUE}🔗 Your Video SDK is live at:${NC}"
          echo -e "   🌐 Main: https://$DOMAIN"
          echo -e "   🎮 Host: https://$DOMAIN/host.html"
          echo -e "   📺 Client: https://$DOMAIN/client.html"
          echo -e "   🔧 Debug: https://$DOMAIN/debug.html"
          echo -e "   ❤️ Health: https://$DOMAIN/health"
          echo ""
          echo -e "${GREEN}🎉 Custom Video SDK deployed successfully!${NC}" 